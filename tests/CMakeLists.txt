# Add the unit test library.
# NOTE: probably we should have a check in the build system to determine
# whether Boost libraries are static or dynamic.
ADD_DEFINITIONS(-DBOOST_TEST_DYN_LINK)

MACRO(ADD_AUDI_TESTCASE arg1)
	IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
		ADD_EXECUTABLE(${arg1} helpers.hpp ${arg1}.cpp)
		TARGET_LINK_LIBRARIES(${arg1} ${MANDATORY_LIBRARIES} ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY} ${Boost_SERIALIZATION_LIBRARY})
		ADD_TEST(${arg1} ${arg1})
	ENDIF(CMAKE_BUILD_TYPE STREQUAL "Debug")
ENDMACRO(ADD_AUDI_TESTCASE)

MACRO(ADD_AUDI_PERFORMANCE_TESTCASE arg1)
	IF(CMAKE_BUILD_TYPE STREQUAL "Release")
		ADD_EXECUTABLE("${arg1}_perf" "${arg1}_perf.cpp")
		TARGET_LINK_LIBRARIES("${arg1}_perf" ${MANDATORY_LIBRARIES} ${Boost_CHRONO_LIBRARY} ${Boost_TIMER_LIBRARY} ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY} ${Boost_SYSTEM_LIBRARY})
		ADD_TEST("${arg1}_perf" "${arg1}_perf")
	ENDIF(CMAKE_BUILD_TYPE STREQUAL "Release")
ENDMACRO(ADD_AUDI_PERFORMANCE_TESTCASE)

ADD_AUDI_TESTCASE(gdual)
ADD_AUDI_TESTCASE(functions)
ADD_AUDI_TESTCASE(functions_from_d)
ADD_AUDI_TESTCASE(functions_floating_precision)
ADD_AUDI_TESTCASE(neural_network)

ADD_AUDI_PERFORMANCE_TESTCASE(multiplication)
ADD_AUDI_PERFORMANCE_TESTCASE(division)
ADD_AUDI_PERFORMANCE_TESTCASE(trigonometry)
ADD_AUDI_PERFORMANCE_TESTCASE(functions_from_d)
